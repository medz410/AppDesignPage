import { ChangeDetectorRef, ElementRef, OnInit, Renderer2 } from '@angular/core';
import { ControlValueAccessor, Validators } from '@angular/forms';
import { DisplayFieldService } from '../../../services/data/display.field.service';
import { CommonDataService } from '../../../services/data/common.data.service';
import { EventBaseComponent } from '../event.base.component';
export declare class MultiChildDropdownComponent extends EventBaseComponent<any> implements OnInit, ControlValueAccessor, Validators {
    dataService: CommonDataService;
    private displayFieldService;
    element: ElementRef;
    renderer: Renderer2;
    filteredOptions: any;
    fieldlabel: string;
    childArrayKey: string;
    _data: any;
    componentLoaded: boolean;
    childindex: number;
    data: any;
    valuefield: string;
    displayfield: any;
    displayValue: string;
    onRecordSelect: any;
    onChildRecordSelect: any;
    showToolTip: boolean;
    posixUp: boolean;
    status: boolean;
    isValid: boolean;
    selectedindex: number;
    responseData: any;
    previousData: any;
    viewData: any;
    componentId: string;
    multiselectValues: any[];
    maskloader: boolean;
    activedescendant: string;
    key: string;
    isComponentValid: any;
    sendDataToParent: any;
    name: string;
    constructor(dataService: CommonDataService, displayFieldService: DisplayFieldService, element: ElementRef, renderer: Renderer2, _cd: ChangeDetectorRef);
    ngOnInit(): void;
    setData(responsedata: any): void;
    generateIndex(data: any): void;
    writeChangedValue(value: any): void;
    fromWriteChangedValue(value: any): void;
    onItemSelect(selectedItem: any): any;
}
